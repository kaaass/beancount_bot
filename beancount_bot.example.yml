log:
  # 日志等级
  level: 'INFO'

bot:
  # 代理，若无 Telegram 连接问题可删去
  proxy: 'http://127.0.0.1:8080'

  # Telegram 机器人 Token
  token: ''

  # 鉴权用令牌。第一次进入机器人时（即 /start 后）用于校验身份
  auth_token: '123456'

  # 机器人会话文件路径。用于存储鉴权状态、用户特有配置等等
  session_file: 'bot.session'

transaction:
  # 账本文件。可以使用：{year}、{month}、{date}
  beancount_file: '{year}-{month}.bean'

  # 消息处理器
  message_dispatcher:
    # class 必须包含完整模块名，第三方插件可以设置 PYTHONPATH 载入
    # args 参考每个处理器各自的文档
    # 目前内建了模板处理器，配置如下即可
    - class: 'beancount_bot.builtin.TemplateDispatcher'
      args:
        template_config: 'template.yml'

  # 添加在交易上的标签
  # 可以使用 Bot 指令 /set tags <标签名> 添加用户专用标签
  tags:
    - beancount-bot

schedule:
  # 定时任务定义
  # name：定时任务名，可以用 /task name 主动触发
  # class：定时任务类
  # args：创建任务需要的参数

  # 定时任务示例：使用 bean-price 定时更新价格
  # 使用内建任务类：beancount_bot.builtin.DailyCommandTask
  # 该类在每日 time 时执行指令，之后广播 message 消息
  # 详细的关于 bean-price 的配置方式可参考官方文档：https://beancount.github.io/docs/fetching_prices_in_beancount.html
  - name: price
    class: 'beancount_bot.builtin.DailyCommandTask'
    args:
      time: '21:30'
      message: '当日价格更新完成'
      commands:
        - 'bean-price /bean/main.bean >> /bean/automatic/prices.bean'

